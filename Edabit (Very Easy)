def hello():
  return "hello edabot.com"
print(hello())  

print("___________________________________________________________________________")

def get_first_value(number_list):
	return number_list[0]
print(get_first_value([1, 2, 3]))

print("___________________________________________________________________________")

def convert(minutes):
  return minutes*60
print(convert(3))	

print("___________________________________________________________________________")

def next_edge(side1, side2):
  return (side1+side2)-1
print(next_edge(8,10))

print("___________________________________________________________________________")

def how_many_seconds(hours):
  return hours*3600
print(how_many_seconds(2)) 

print("___________________________________________________________________________")

def calculate_exponent(num, exp):
  return num**exp
print(calculate_exponent(5,5))

print("___________________________________________________________________________")

def less_than_or_equal_to_zero(num):
 if num<=0:
   return True
 else:
   return False
print(less_than_or_equal_to_zero(5))

print("___________________________________________________________________________with problem")

def to_int(txt):
  return int(txt)
print(to_int("37"))	

def to_str(num):
  return str(num)
print(to_str(9)) #not rinting as a string with qutation marks

print("___________________________________________________________________________")

def find_perimeter(height, width):
	perimeter=(height+width)*2
	return perimeter
print(find_perimeter(6,7 ))  

print("___________________________________________________________________________")


def addition(a, b):
  return a+b
print(addition(5,3))  

print("\n")#Finding the largest number in a list

def findLargestNum(nums):
 result=nums[0]
 for a in nums:
	 if a > result:
		 result=a
 return result
print(findLargestNum([2,4,6,8,3543,7]))

print("\n")

def less_than_100(a, b):
 if a+b<100:
  return True
 return False 
	
print("\n")

def tri_area(base, height):
 area=(height*base)/2
 return area

print("\n")

def animals(chickens, cows, pigs):
 legs=(chickens*2)+(cows*4)+(pigs*4)
 return legs

print("\n")

def addition(num):
 result=num+1
 return result

print("\n")

def get_sum_of_elements(lst):
 result=0
 for i in lst:
  result+=i
 return result

print("\n")

def difference_max_min(lst):
 lst.sort(reverse=True)
 result=abs(lst[-1]-lst[0])
 return result

print("\n")

def profitable_gamble(prob, prize, pay):
 if prob*prize>pay:
  return True 
 return False	

print("\n")

def k_to_k(n, k):
 if k**k==n:
  return True
 return False

print("\n")

def divisible_by_five(n):
 if n%5==0:
  return True
 return False	

print("\n")#returning last item

def get_last_item(lst):
 return lst[-1]

print("\n")

def comp(txt1, txt2):
 if len(txt1)==len(txt2):
  return True
 return False	

print("\n")

def concat(lst1, lst2):
  for i in lst2:
    lst1.append(i)
  return lst1
print(concat([3,4,6],[4,1,1]))

print("\n")

def is_same_num(num1, num2):
 if num1==num2:
  return True 
 return False

print("\n")

def hello_name(name):
 return "Hello "+name+"!"

print("\n")

def divides_evenly(a, b):
 if a%b==0:
  return True
 return False

print("\n")

def difference(nums):
 nums.sort(reverse=True)
 return abs(nums[0]-nums[-1])

print("\n") 

def remainder(x, y):
 return x%y

print("\n") 

def is_empty(s):
 if s=="":
  return True 
 return False	
	
print("\n") 

def is_plural(word):
 if word[-1]=="s":
  return True 
 return False

print("\n") 

def squared(b):
	return b**2

def concat_name(first_name, last_name):
	return last_name+", "+first_name

def divisible(num):
 if num%100==0:
  return True
 return False

def find_smallest_num(lst):
  return min(lst)

def get_container(product):
	matches = {
	"Bread" : "bag",
	"Milk" : "bottle",
	"Beer" : "bottle",
	"Eggs" : "carton",
	"Cerials" : None,
	"Candy" : "plastic",
	"Cheese" : None
	}
	return matches[product]	 
print(get_container("Cheese"))  

def has_spaces(txt):
 if " " in txt:
	 return True
 return False 

def count_true(lst):
 return lst.count(True)

def num_to_dashes(num):
 return "-"*num
 
def ctoa(char):
 return ord(char) 
   
def programmers(one, two, three):
 lst=(one, two, three)
 return max(lst)-min(lst)

def check(lst, el):
 if el in lst:
  return True
 return False

def has_key(dictionary, key):
 if key in dictionary:
  return True 
 return False	

def min_max(nums):
 return [min(nums),max(nums)]      
print(min_max([2,4,677,54,3]))
